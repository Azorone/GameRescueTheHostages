#pragma once
#ifndef Game_MAP
#include"global_value.h"
#include "game_object.h"
int View[viewSIZE_Y][viewSIZE_X]{
  



};
//int **View;
//int ***Map_Game_1;
//int v = Game_wuxie * 10 + No_movement;
//std::vector<std::vector<std:: vector<int>*>*>* Map_Game_1;
//std::vector<std::vector<int>*>* View;
//µØÍ¼±à¼­
int edit_Map[2][Big_map_size_I][Big_map_size_J]{
     {
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_ground_Spikes * 10,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique2 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,0,0,0,Game_antique3 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,Game_antique2 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,Game_road_sign * 10,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_road_sign * 10,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,0,0,0,Game_antique3 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,Game_road_sign * 10,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,Game_road_sign * 10,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,Game_ground_Spikes * 10,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,Game_road_sign * 10,0,0,Game_road_sign * 10,0,Game_Princess * 10,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,Game_antique2 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,0,0,10,Game_antique3 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,Game_road_sign*10,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_road_sign * 10,0,0,Game_ground_Spikes * 10,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique4 * 10,0,Game_road_sign * 10,0,0,0,10,0,10,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique5 * 10,0,0,0,0,10,0,0,10,0,0,0,0,10,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10},
       {0,0,0,0,0,0,0,0,10,0,0,0,Game_antique3 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,Game_antique1 * 10,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_ground_Spikes * 10,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,Game_road_sign * 10,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_ground_Spikes * 10,0,0,10,0,0,0,Game_road_sign * 10,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_antique2 * 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,0,0,0,Game_antique3 * 10,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,0,Game_antique1 * 10,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  },
     {
         {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
           {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,fb,fb,0,fb,0,0,0,0,0,0,0,0,0,0},
                   {0,0,0,0,0,0,fb,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Game_reward_2 * 10,0,Game_Stone_Monster*10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb1,fb1,0,0,0,0,0,0,0},
                     {fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,0,0,0,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb},
                  {0,0,0,0,0,0,0,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,0,0,0,0,fb1,fb1,fb1},
                      {0,0,0,0,0,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,0,0,0,0,0,0,fb1,fb1,fb1,0},
                       {0,0,0,0,0,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb1,fb1,0},
                        {0,0,0,0,0,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb1,fb1,0},
                         {0,0,0,0,0,fb1,0,Game_reward_2 * 10,0,fb,0,0,0,Game_reward_2 * 10,0,0,R41,0,R42,0,0,0,Game_reward_2 * 10,0,R46,0,Game_reward_2 * 10,0,0,Game_reward_2 * 10,R33,0,0,R33,R33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                        {0,0,fb,fb,fb,fb,fb,fb,fb,fb,0,fb,fb,fb,fb,fb,fb,fb,fb,fb1,fb1,fb1,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb},
                           {0,fb1,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                            {0,fb1,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                             {0,fb1,fb1,0,0,0,0,0,R43,0,0,0,0,0,0,0,0,R30,0,R29,0,R39,0,R45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                              {0,fb1,fb1,0,0,0,0,0,0,0,0,0,0,R29,0,0,Game_reward_2 * 10,0,0,0,0,R30,0,0,0,0,0,0,0,0,0,0,R30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                               {0,0,fb1,0,0,0,R43,0,0,R29,0,R33,0,0,fb,fb,0,0,fb,fb,0,0,fb,fb,0,0,0,0,0,0,R33,R33,0,R33,fb,0,0,0,0,0,0,fb1,0,0,0,R29,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,fb,0,0,0,0,0,0,0,0,0,0,0,0,fb1,0,0,0,0,0,0,0,Game_Stone_Monster * 10,0,0,Game_reward_2 * 10,0,0,0,0,0,0,fb,0,0,0,0,0,0,0,R33,0,0,0,0,0,0,0,0,0,Game_reward_2 * 10,0,0,0,0,0,0,0,0 },
    { 0,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,0,0,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb },
                                  {0,0,fb1,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,R33,0,R33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,R33,0,0,0,0,0,0,0,0,0,0,0,0,fb1},
                                   {0,0,fb1,fb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,fb,fb,fb,fb,fb,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb,fb,fb,fb,fb,fb,fb,0,0,0,0,0,0,0,0,0,0,fb1},
                                    {0,0,fb1,fb1,Game_road_sign*10,0,0,0,0,R41,0,0,0,R41,0,0,0,0,0,0,0,R24,0,0,0,0,R33,0,0,Game_Princess * 10,0,R33,0,0,0,0,0,R23,0,0,0,0,0,R46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,fb1},
                                   { fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb,fb },
                           
                                       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                         {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                           {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                             {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                     {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                      {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                         {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                           {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                             {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                              {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                                  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                                   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                                                        
  }
};
int Map_Game_1[2][Big_map_size_I][Big_map_size_J]{};

void fillView(int eyeX, int eyeY, int rangeX, int rangeY, int G_max_x, int G_max_y, int G_min_x, int G_min_y, int p) {

    int Map_G_rx_l_i = 1;
    int Map_G_rx_r_i = 1;
    int Map_G_ry_l_j = 1;
    int Map_G_ry_r_j = 1;
    if (eyeX - rangeX <= G_min_x)
    {
        Map_G_rx_l_i = G_min_x;
    }
    else if (eyeX - rangeX > G_min_x)
    {
        Map_G_rx_l_i = eyeX - rangeX;
    }
    if (eyeX + rangeX >= G_max_x)
    {
        Map_G_rx_r_i = G_max_x;
    }
    else if (eyeX + rangeX < G_max_x)
    {
        Map_G_rx_r_i = eyeX + rangeX;
    }

    if (eyeY - rangeY <= G_min_y)
    {
        Map_G_ry_l_j = G_min_y;
    }
    else if (eyeY - rangeY > G_min_y)
    {
        Map_G_ry_l_j = eyeY - rangeY;
    }

    if (eyeY + rangeY >= G_max_x) {
        Map_G_ry_r_j = G_max_x;
    }
    else if (eyeY + rangeY < G_max_x)
    {
        Map_G_ry_r_j = eyeY + rangeY;
    }
    int curil = Map_G_rx_l_i;
    int curjl = Map_G_ry_l_j;
    for (int i = 1; i < viewSIZE_Y - 1; i++) {
        Map_G_ry_l_j = curjl;

        for (int j = 1; j < viewSIZE_X - 1; j++)
        {
            if (Map_G_rx_l_i <= Map_G_rx_r_i && Map_G_ry_l_j <= Map_G_ry_r_j)
            {
                View[i][j] = Map_Game_1[p][Map_G_rx_l_i][Map_G_ry_l_j];
             
                Map_G_ry_l_j++;

            }
            else
            {

                break;
            }

        }
        Map_G_rx_l_i++;
    }
}

void creatObjectByMap(int mpid) {
    for (int i = 1; i < Big_map_size_I - 1; i++)
    {

        for (int j = 1; j < Big_map_size_J - 1; j++) {
            int v = edit_Map[mpid][i][j]; 
            if (mpid == 1&&v == 0)
            {
                Map_Game_1[mpid][i][j] = -1;
                continue;

            }
            GameSuper* g = CreatGameObject(v, mpid, i, j);
           
            // g->positionX = (j - 1) * PX_SiZE;
            // g->positionY = (i - 1) * PX_SiZE;
            Map_Game_1[mpid][i][j] = g->id;
        }
    };
}
void rendView0() {

    for (int i = 1; i < viewSIZE_Y - 1; i++)
    {
        for (int j = 1; j < viewSIZE_X - 1; j++) {
            int v = View[i][j];
            //  std::cout << v << "\n";
            if (v==-1)
            {
                continue;
            }
            GameSuper* s = GlobalM_Game_Object[v];
            if (s != NULL)
            {

              
                if (s->is_show) {

                  //  GameSuper* s = GlobalM_Game_Object[v];

                    if (s->auto_move)
                    {
                       
                            s->positionX = (j - 1) * PX_SiZE + s->autoMoveStartX;
                            s->positionY = (i - 1) * PX_SiZE+ s->autoMoveStartY;
                        s->render();
                        continue;
                    }
                    s->positionX = (j - 1) * PX_SiZE;
                    s->positionY = (i - 1) * PX_SiZE;
                    s->render();
                }
               
            }
        }
    }
}
void rendView(int eyeX, int eyeY, int p, int r_range) {

    int rangeX = r_range / 2;
    int rangeY = r_range / 2;
    int G_max_x = Big_map_size_J - 1;
    int G_max_y = Big_map_size_I - 1;
    int G_min_x = 1;
    int G_min_y = 1;
    fillView(eyeX, eyeY, rangeX, rangeY, G_max_x, G_max_y, G_min_x, G_min_y, p);
    rendView0();
}

void renderGam1Map(int eyeX, int eyeY) {
    rendView(eyeX, eyeY, 0, viewSIZE_X);
}
 void renderGam2Map(int eyeX, int eyeY) {
    rendView(eyeX, eyeY, 1, viewSIZE_X);
}
#endif // 


